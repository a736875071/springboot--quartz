<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.change.dao.quartz.UserDao" >
  <resultMap id="BaseResultMap" type="com.change.entity.quartz.User" >
    <id column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="rights" property="rights" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="role_id" property="role_id" jdbcType="INTEGER" />
    <result column="last_login" property="last_login" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, loginname, password, username, rights, status, role_id, last_login
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{user_id,jdbcType=INTEGER}
  </select>
  <select id="findUsers" resultType="com.change.entity.quartz.User">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{user_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.change.entity.quartz.User" >
    insert into user (user_id, loginname, password, 
      username, rights, status, 
      role_id, last_login)
    values (#{user_id,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{rights,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{role_id,jdbcType=INTEGER}, #{last_login,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.change.entity.quartz.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="rights != null" >
        rights,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="role_id != null" >
        role_id,
      </if>
      <if test="last_login != null" >
        last_login,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="rights != null" >
        #{rights,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="role_id != null" >
        #{role_id,jdbcType=INTEGER},
      </if>
      <if test="last_login != null" >
        #{last_login,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.change.entity.quartz.User" >
    update user
    <set >
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="rights != null" >
        rights = #{rights,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="role_id != null" >
        role_id = #{role_id,jdbcType=INTEGER},
      </if>
      <if test="last_login != null" >
        last_login = #{last_login,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.change.entity.quartz.User" >
    update user
    set loginname = #{loginname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      rights = #{rights,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      role_id = #{role_id,jdbcType=INTEGER},
      last_login = #{last_login,jdbcType=TIMESTAMP}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
</mapper>